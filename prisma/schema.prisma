generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(cuid())
  name           String
  email          String         @unique
  phone          String
  membershipType MembershipType
  status         UserStatus     @default(ACTIVE)
  joinDate       DateTime       @default(now())
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  
  loans          Loan[]
  
  @@map("users")
}

model Book {
  id              String   @id @default(cuid())
  title           String
  author          String
  isbn            String   @unique
  publishedYear   Int
  genre           String
  totalCopies     Int
  availableCopies Int
  description     String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  loans           Loan[]
  
  @@map("books")
}

model Loan {
  id           String     @id @default(cuid())
  userId       String
  bookId       String
  loanDate     DateTime   @default(now())
  dueDate      DateTime
  returnDate   DateTime?
  status       LoanStatus @default(ACTIVE)
  renewalCount Int        @default(0)
  maxRenewals  Int        @default(2)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  
  user         User       @relation(fields: [userId], references: [id])
  book         Book       @relation(fields: [bookId], references: [id])
  
  @@map("loans")
}

enum MembershipType {
  STUDENT
  TEACHER
  COMMUNITY
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum LoanStatus {
  ACTIVE
  RETURNED
  OVERDUE
}
